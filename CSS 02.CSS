@import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");

:root {
  --logo-size: 60px;
  --overlay-color: #03a9f4;
  --background-color: #000;
  --font-color: #fff;
  --menu-width: 300px;
}

* {
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
  /* 为什么要在全局设置margin padding为0 */
  margin: 0;
  padding: 0;
}

.showcase {
  /* 如何思考为元素开启什么定位 */
  position: absolute;
  right: 0;
  width: 100%;
  /* 为什么这里用vh */
  min-height: 100vh;
  padding: 100px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #000;
  color: #fff;
  z-index: 2;
}

.showcase.active {
  right: var(--menu-width);
  /* 为什么重新设置宽度后，字体会回到中心位置 */
  width: calc(100% - var(--menu-width));
}

/* 直接为header设置，而不单独为travel设置 */
.showcase header {
  /* 为什么开绝对定位 */
  position: absolute;
  /* top left是为了找原点吗 */
  top: 0px;
  left: 0px;
  /* 绝对定位元素性质会改变，块的高宽被元素撑开。 */
  /* 但是为什么不指定header的高度呢？ */
  width: 100%;
  padding: 40px 100px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  text-transform: uppercase;
  z-index: 3;
}

.showcase header .toggle {
  /* 为什么给toggle开相对定位 */
  position: relative;
  /* 理解：给元素设置宽高，再给背景设置大小和位置 */
  width: 60px;
  height: 60px;
  background: url("./src/image/menu.svg");
  background-repeat: no-repeat;
  background-size: 30px;
  background-position: center;
  cursor: pointer;
  filter: invert(1);
}

.showcase header .toggle.active {
  background: url("./src/image/close.svg");
  background-repeat: no-repeat;
  background-size: 30px;
  background-position: center;
}

.showcase video {
  /* 这里的定位父元素是showcase吗 */
  position: absolute;
  /* 和header一样，这里为什么要写top left */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* object-fit属性用于指定如何调整 <img> 或 <video> 的大小以适合其容器。 */
  object-fit: cover;
  opacity: 0.8;
  z-index: 0;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--overlay-color);
  mix-blend-mode: overlay;
}

.text {
  /* 疑问：这里为什么开启相对定位
理解：相对定位不用指定乱七八糟的位置 */
  position: relative;
  z-index: 4;
}

.text h2 {
  font-size: 5rem;
  font-weight: 800;
  line-height: 1em;
  text-transform: uppercase;
}

.text h3 {
  font-size: 4rem;
  font-weight: 700;
  line-height: 1em;
  text-transform: uppercase;
}

.text p {
  font-size: 1.1rem;
  max-width: 700px;
  margin: 20px 0;
}

.text a {
  display: inline-block;
  font-size: 1rem;
  text-decoration: none;
  color: var(--background-color);
  background-color: var(--font-color);
  padding: 10px 30px;
  margin-top: 10px;
  letter-spacing: 2px;
  text-transform: uppercase;
  transition: 0.2s;
}

.text a:hover {
  letter-spacing: 6px;
}

.social {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  list-style: none;
  bottom: 20px;
  cursor: pointer;
  filter: invert(1);
}

.social li a {
  display: inline-block;
  margin-right: 20px;
  transition: 0.4s;
}

.social li a:hover {
  transform: translateY(-10px);
}

.menu {
  position: absolute;
  top: 0;
  /* 为什么这里设置right而不是left */
  right: 0;
  width: var(--menu-width);
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1;
}

.menu li {
  /* 为什么要设置 relative，只是习惯吗 */
  position: relative;
  list-style: none;
}

.menu li a {
  text-decoration: none;
  color: var(--overlay-color);
  font-size: 24px;
}

@media (max-width: 768px) {
  .showcase,
  .showcase header {
    padding: 40px;
  }

  .text h2 {
    font-size: 3rem;
  }

  .text h3 {
    font-size: 2rem;
  }
}
